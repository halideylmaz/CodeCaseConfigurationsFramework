version: '3.8'

services:
  # MongoDB Veritabanı
  mongodb:
    image: mongo:7.0
    container_name: config-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ConfigurationDb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - config-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: config-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - config-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Konfigürasyon Yöneticisi Web API
  configuration-manager:
    build:
      context: .
      dockerfile: ConfigurationManager/Dockerfile
    container_name: config-manager-api
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - MongoDbSettings__ConnectionString=mongodb://admin:password123@mongodb:27017/ConfigurationDb?authSource=admin
      - MongoDbSettings__DatabaseName=ConfigurationDb
      - MongoDbSettings__CollectionName=Configurations
      - RabbitMQSettings__HostName=rabbitmq
      - RabbitMQSettings__Port=5672
      - RabbitMQSettings__UserName=admin
      - RabbitMQSettings__Password=password123
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - config-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MongoDB Express (MongoDB için Web Arayüzü)
  mongo-express:
    image: mongo-express:1.0.2
    container_name: config-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: pass123
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - config-network

volumes:
  mongodb_data:
  mongodb_config:
  rabbitmq_data:

networks:
  config-network:
    driver: bridge


